import { Component } from '@angular/core';
import { AssistantCoreBaseComponent } from '../assistant-core-base/assistant-core-base.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@ngx-translate/core";
export class AssistantLabelComponent extends AssistantCoreBaseComponent {
}
AssistantLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AssistantLabelComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
AssistantLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AssistantLabelComponent, selector: "assistant-label", usesInheritance: true, ngImport: i0, template: "<span class=\"assistant-label\">\n    <span\n       class=\"assistant-l assistant-l-{{ size }} assistant-l-{{ type }}\"\n       [ngClass]=\"{\n          'assistant-l-uppercase': uppercase == true,\n          'assistant-l-bold': bold == true,\n          'assistant-l-ellipsis': ellipsis == true && maxWidth !== ''\n       }\"\n       [ngStyle]=\"{ 'max-width': maxWidth !== '' ? maxWidth : '' }\"\n    >\n       <span *ngIf=\"i18nLabel\">{{ i18nLabel | translate }}</span>\n       <span *ngIf=\"!i18nLabel && label\">{{ label }}</span>\n    </span>\n </span>\n \n", styles: [":host ::ng-deep .assistant-label .assistant-l{white-space:nowrap}:host ::ng-deep .assistant-label .assistant-l-ellipsis{display:inline-block;text-overflow:ellipsis;overflow:hidden}:host ::ng-deep .assistant-label .assistant-l-bold{font-weight:bold}:host ::ng-deep .assistant-label .assistant-l-uppercase{text-transform:uppercase}:host ::ng-deep .assistant-label .assistant-l-xxs{font-size:8px}:host ::ng-deep .assistant-label .assistant-l-xs{font-size:9px}:host ::ng-deep .assistant-label .assistant-l-s{font-size:12px}:host ::ng-deep .assistant-label .assistant-l-m{font-size:14px}:host ::ng-deep .assistant-label .assistant-l-l{font-size:16px}:host ::ng-deep .assistant-label .assistant-l-xl{font-size:20px}:host ::ng-deep .assistant-label .assistant-l-xxl{font-size:22px}:host ::ng-deep .assistant-label .assistant-l-primary{color:#003b9a}:host ::ng-deep .assistant-label .assistant-l-secondary{color:#bacae4}:host ::ng-deep .assistant-label .assistant-l-third{color:#4339f2}:host ::ng-deep .assistant-label .assistant-l-alert{color:#ff3a29}:host ::ng-deep .assistant-label .assistant-l-confirm{color:#299cff}:host ::ng-deep .assistant-label .assistant-l-other{color:#dad7fe}:host ::ng-deep .assistant-label .assistant-l-text1{color:#000}:host ::ng-deep .assistant-label .assistant-l-text2{color:#cfd8ea}:host ::ng-deep .assistant-label .assistant-l-text3{color:#143b9a}:host ::ng-deep .assistant-label .assistant-l-text4{color:#fff}\n"], directives: [{ type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "translate": i2.TranslatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AssistantLabelComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'assistant-label',
                    templateUrl: './assistant-label.component.html',
                    styleUrls: ['./assistant-label.component.scss'],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzaXN0YW50LWxhYmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BwLWFzc2lzdGFudC1saWJyYXJ5L3NyYy9saWIvY29tcG9uZW50cy9nZW5lcmljcy9hc3Npc3RhbnQtbGFiZWwvYXNzaXN0YW50LWxhYmVsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BwLWFzc2lzdGFudC1saWJyYXJ5L3NyYy9saWIvY29tcG9uZW50cy9nZW5lcmljcy9hc3Npc3RhbnQtbGFiZWwvYXNzaXN0YW50LWxhYmVsLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUE7QUFDekMsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sc0RBQXNELENBQUE7Ozs7QUFPakcsTUFBTSxPQUFPLHVCQUF3QixTQUFRLDBCQUEwQjs7cUhBQTFELHVCQUF1Qjt5R0FBdkIsdUJBQXVCLDhFQ1JwQyxvakJBZUE7NEZEUGEsdUJBQXVCO2tCQUxuQyxTQUFTO21CQUFDO29CQUNSLFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLFdBQVcsRUFBRSxrQ0FBa0M7b0JBQy9DLFNBQVMsRUFBRSxDQUFDLGtDQUFrQyxDQUFDO2lCQUNqRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXG5pbXBvcnQgeyBBc3Npc3RhbnRDb3JlQmFzZUNvbXBvbmVudCB9IGZyb20gJy4uL2Fzc2lzdGFudC1jb3JlLWJhc2UvYXNzaXN0YW50LWNvcmUtYmFzZS5jb21wb25lbnQnXG5cbkBDb21wb25lbnQoe1xuICAgc2VsZWN0b3I6ICdhc3Npc3RhbnQtbGFiZWwnLFxuICAgdGVtcGxhdGVVcmw6ICcuL2Fzc2lzdGFudC1sYWJlbC5jb21wb25lbnQuaHRtbCcsXG4gICBzdHlsZVVybHM6IFsnLi9hc3Npc3RhbnQtbGFiZWwuY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgQXNzaXN0YW50TGFiZWxDb21wb25lbnQgZXh0ZW5kcyBBc3Npc3RhbnRDb3JlQmFzZUNvbXBvbmVudCB7fSIsIjxzcGFuIGNsYXNzPVwiYXNzaXN0YW50LWxhYmVsXCI+XG4gICAgPHNwYW5cbiAgICAgICBjbGFzcz1cImFzc2lzdGFudC1sIGFzc2lzdGFudC1sLXt7IHNpemUgfX0gYXNzaXN0YW50LWwte3sgdHlwZSB9fVwiXG4gICAgICAgW25nQ2xhc3NdPVwie1xuICAgICAgICAgICdhc3Npc3RhbnQtbC11cHBlcmNhc2UnOiB1cHBlcmNhc2UgPT0gdHJ1ZSxcbiAgICAgICAgICAnYXNzaXN0YW50LWwtYm9sZCc6IGJvbGQgPT0gdHJ1ZSxcbiAgICAgICAgICAnYXNzaXN0YW50LWwtZWxsaXBzaXMnOiBlbGxpcHNpcyA9PSB0cnVlICYmIG1heFdpZHRoICE9PSAnJ1xuICAgICAgIH1cIlxuICAgICAgIFtuZ1N0eWxlXT1cInsgJ21heC13aWR0aCc6IG1heFdpZHRoICE9PSAnJyA/IG1heFdpZHRoIDogJycgfVwiXG4gICAgPlxuICAgICAgIDxzcGFuICpuZ0lmPVwiaTE4bkxhYmVsXCI+e3sgaTE4bkxhYmVsIHwgdHJhbnNsYXRlIH19PC9zcGFuPlxuICAgICAgIDxzcGFuICpuZ0lmPVwiIWkxOG5MYWJlbCAmJiBsYWJlbFwiPnt7IGxhYmVsIH19PC9zcGFuPlxuICAgIDwvc3Bhbj5cbiA8L3NwYW4+XG4gXG4iXX0=